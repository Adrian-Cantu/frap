#1.##Concatenate databases: erase>.py
Script to concatenate database when the genome has several contigs or plasmids
Go to the folder where all fasta of the genomes are and run the script: 

python erase>.py



If the files end in .fna use: 
If the files end in .fasta use: 

#2.##Get mean genome size from the database: genome_size2.py
Go to the folder where the multifasta database is and run

python genome_size2.py

stdout is mean = [number] bp

#3.##FRAP :jmf5.pl and frap_normalizarion.pl
jmf5.pl [path to database file] [path to dataset folder] [path to results folder] [smalt] [mean genome size]

FIX in frap_normalization.pl: 
Get rid of * in the first lines
Get rid of the first (-)
Change the print order to: NAME \t frap values ... \t IDS 

#4.##Heatmap from any frap .tab output: Plot_Heatmap.R 
Make sure to have the R libraries: gplots and RColorBrewer 
Run in the results folder: 
Rscript Plot_Heatmap.R [absolute path to results folder]
output: heatmap_all_normalized_per_million.png 


#5.##Get identities for fragment recruitment plots: fragplot2.py 

FIX. Maybe erase.py can create the file: create a file with the name: db_id_name.txt that needs to be in the results folder. 
This file should contain 
ID \t Genome name \t genome length 

FIX: metaID takes the names from the name before "_vs_", and takes the first field which is the metagenome ID 

python fragplot2.py [absolute path to database folder] [absolute path to results folder] 

Output: GenomeID_in_metaID_identitied.tab 

#6.##Get fragment recriotment plots: Recruitment_Plot2.R
The script need to be in the results folder
Rscript Recruitment_Plot2.R [genomeID] [path_to_results_folder] "GenomeID_in_metaID_identitied.tab"

To run all the fragment recruitment plots in the results folder:
for i in â€œgenomeID_*identities.tab; do echo $i; Rscript Recruitment_Plot2.R genomeID path_to_results_folder $i; done

Output: fragplot_metaID_genomeID.png

