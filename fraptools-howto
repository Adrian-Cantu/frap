#1.##Concatenate databases: database_maker.py
Script to concatenate database when the genome has several contigs or plasmids
Go to the folder where all fasta of the genomes are and run the script: 

Use: python database_maker.py
Output: database.fasta
Output: db_id_name.txt

#2.##Get mean genome size from the database: genome_size2.py

FIX: what's the name of this program in the folder now??

Go to the folder where the multifasta database is and run
Use: python genome_size2.py
Output: stdout is mean = [number] bp

#3.##FRAP :jmf4.pl and frap_normalizarion.pl
jmf4.pl [path to database file] [path to dataset folder] [path to results folder] [smalt] [mean genome size]

FIX: Ask the user the number of threads to use. 

#4.##Heatmap from any frap .tab output: Plot_Heatmap.R 
Make sure to have the R libraries: gplots and RColorBrewer 
Run in the results folder: 
Rscript Plot_Heatmap.R [absolute path to results folder]
output: heatmap_all_normalized_per_million.png 


#5.##Get identities for fragment recruitment plots: fragplot2.py 

python fragplot2.py [absolute path to database folder] [absolute path to results folder] 

Output: GenomeID_in_metaID_identities.tab 

#6.##Get fragment recruitment plots: Recruitment_Plot3.R
The script need to be in the results folder
Rscript Recruitment_Plot3.R [genomeID] [path_to_results_folder] "GenomeID_in_metaID_identities.tab"

To run all the fragment recruitment plots in the results folder:
for i in â€œgenomeID_*identities.tab; do echo $i; Rscript Recruitment_Plot3.R genomeID path_to_results_folder $i; done

Output: fragplot_metaID_genomeID.png

Scripts needed:
frap-plot.pl : make heatmap, coverage plots, fragment recruitment plots
frap-clean.pl : delete sam files 

1) Run frap: jmf.pl
2) Make plots: frap-plot.pl
3) Clean intermediate files: frap-clean.pl

FIX: Script to get the top 10 genomes. By sum of fractional abundances. Output: ID \t Name \t genome length ** same as db_id_name.txt


